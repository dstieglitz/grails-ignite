buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.0.10"
    }
}

version "2.0.0-SNAPSHOT"
group "org.grails.plugins"

def igniteVer = '2.8.0-SNAPSHOT'
def igniteHibernateVer = '2.8.0-SNAPSHOT'
def stainless = new ConfigSlurper().parse(new File("${System.properties['user.home']}/.stainless").toURL())

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"
apply plugin:"java"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "http://www.gridgainsystems.com/nexus/content/repositories/external" }
    maven {
        credentials {
            username stainless.config.repo.username
            password stainless.config.repo.password
        }
        url stainless.config.repo.url
    }
}

//FIXME: javadoc task fails, preventing install/deploy
tasks.withType(Javadoc).all { enabled = false }

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    compile "org.slf4j:log4j-over-slf4j:1.7.28"

    compile "org.apache.ignite:ignite-core:${igniteVer}"
    compile ("org.apache.ignite:ignite-spring:${igniteVer}")
    compile "org.apache.ignite:ignite-indexing:${igniteVer}"
    compile("org.apache.ignite:ignite-hibernate_5.3:${igniteHibernateVer}") {
        exclude group: 'org.hibernate', module: 'hibernate-core'
    }
    compile "org.apache.ignite:ignite-web:${igniteVer}"
    compile("org.apache.ignite:ignite-log4j:${igniteVer}") {
        exclude group: 'log4j', module: 'log4j'
    }
    compile "org.apache.ignite:ignite-aws:${igniteVer}"

    compile 'org.bouncycastle:bcprov-jdk15on:1.52'
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.0'
//    compile 'com.cedarsoftware:groovy-io:1.1.1'
    compile 'it.sauronsoftware.cron4j:cron4j:2.2.5'
    compile "de.ruedigermoeller:fst:2.47"

    compile('com.h2database:h2:1.4.197'){ //this version is required by ignite, it cannot go higher currently
        force = true
    }
    compile 'org.grails.plugins:hibernate5:7.0.1'
    
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:gsp"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.0.10"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.mockito:mockito-core"
}

bootRun {
    jvmArgs(
        '-Dspring.output.ansi.enabled=always', 
        '-noverify', 
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}
// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false
grailsPublish {
    // TODO: Provide values here
    user = 'user'
    key = 'key'
    githubSlug = 'foo/bar'
    license {
        name = 'Apache-2.0'
    }
    title = "My Plugin"
    desc = "Full plugin description"
    developers = [johndoe:"John Doe"]
}

integrationTest {
    failFast = true
    reports {
        junitXml.enabled = false
        html.enabled = true
    }
    testLogging {
        showStandardStreams = true
    }
}


assets {
    packagePlugin = true
}

